Must:
* setup web project as https-only tapestry servlet
* shell login poc (prints qr code, username, auth variables grants 'nobody')
* shell uid/gid lookup
* document runtime dependencies for later packaging (qrencode)
* allow web user creation
* allow basic web user login

* sync to git via qrauthd
** write tenantsync record
** enqueue tenant_id as sqs message with 'clumping' delay (modulous 5 seconds?)
** moderate self to not enqueue tenant_id during till live-line
** username@tentant-domain (rather than email?) or username@auth.provider.com (invalid? more correct?)
** *actual* email address (if available)? spammers scraping by granting everyone shell access?

* allow web configuration
** username restriction function (no dictionary words, or singular proper: 'bob', dirty-word filter? >4 chars)
** allow setting username to desired string (if available and unrestricted)
** allow setting username by clicking list of (probably-available) generated ones
** safe & understandable auth method setup
* build out auth methods
* allow shell user to login (using all auth methods)

* support sqrl (to some degree, or expandable therefor)
* support totp (for offline usage)
* be clock-skew resistant


TODO:
* add user locale db field
* add user email db field
* can the current nuts table be used to verify email addresses?
* maybe: add user unixUid db field (? or start sequence number really high?)
* add tenant, hostname, and ip to nut table
* add shellApiKey (non hashed) to tenant table; UNIQUE
* 'shell' boolean in tenantperson (default false)
* specify, wherever possible, that 'root' user never is authenticated (e.g. listing authorized pubkeys, sync'ing accounts, etc)
* can we get an ever-updating list of all available upstream-packaged-users? or even common system users?
* tenant domain field
* tenant qrauthd connection field ?!?! UNIQUE? domain-restricted?
* claimable tenant-specific (and global) group-name system
* note that tenant death message may be visible to other tenants (when considering ban)


Should:
* support transparent sqrl linkage (scan qr, then login)
* support "perfect paper passwords"
* support hotp (for bad-clock-and-no-network usage?)
* have an encrypted-at-rest strategy

Could:
* have separate otp credentials for 'trusted' and 'untrusted' access levels? (WAN/PROXY) qrauth-session-enforcement?
* support solidpass-like CRAM mechanism (enter password on [or no-pass from] your phone)
* support a "standard" CRAM, like CRAM-MD5
* support basic notification to verified email addresses
* support email address verification
* reveal username to tenants (cross-site publishing personalities?)
* support user-to-user btc donations
* allow users to upload a large-ish image, crop to 128px square, upload to S3, and have it available as userImageUrl field

